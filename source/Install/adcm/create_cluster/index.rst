Создание кластера ADS
=====================

После выполнения `предварительных действий <>`_ и `загрузки бандла <>`_ в кластер-менеджере **ADCM** содержится следующий список объектов (:numref:`Рис.%s.<img_4>`):

* Прототип кластера мониторинга и созданный на его основе экземпляр (программа мониторинга развернута на хосте, ADCM содержит записи о его результатах и настройках);

* Прототип кластера *ads* для создания экземпляров;

* Предварительно подготовленные , а в базе данных ADCM хранятся записи о них и их учетных данных -- ssh-ключах или паролях.

.. _img_4:

.. figure:: ../../imgs/hosts.*
   :align: center

   Список объектов в ADCM

Данным объектам доступен следующий функционал:

+ `Создание экземпляра кластера`_;
+ `Конфигурация кластера`_;
+ `Добавление сервисов`_;
+ `Добавление хостов`_;
+ `Размещение компонентов сервисов на хостах`_;
+ `Установка сервиса Zookeeper`_;
+ `Установка сервиса Kafka`_;
+ `Установка сервиса Nifi`_;
+ `Установка сервиса Monitoring Clients`_.



Создание экземпляра кластера
----------------------------

При создании кластера в веб-интерфейсе **ADCM** генерируется новый экземпляр кластера *ads*, что означает только добавление данных о нем в базу данных **ADCM** -- на этом этапе не производится установка *ads* на хосты.

1. Открыть в ADCM вкладку "CLUSTERS" (:numref:`Рис.%s.<img_5>`).

.. _img_5:

.. figure:: ../../imgs/adcm.*
   :align: center

   Вкладка "CLUSTERS"


2. Нажать "Add cluster" и в открывшейся форме создать экземпляр кластера из прототипа *ads*, полученного из бандла (:numref:`Рис.%s.<img_6>`).

.. _img_6:

.. figure:: ../../imgs/add_cluster.*
   :align: center

   Создание экземпляра кластера


3. В результате выполненных действий факт создания экземпляра кластера отображается в базе данных ADCM на вкладке "CLUSTERS" (:numref:`Рис.%s.<img_7>`).


.. _img_7:

.. figure:: ../../imgs/clusters_list.*
   :align: center

   Результат успешного создания экземпляра кластера



Конфигурация кластера
---------------------

Для перехода к настройкам экземпляра кластера *ads* необходимо нажать кнопку с пиктограммой шестеренки в соответствующей строке вкладки "CLUSTERS" (:numref:`Рис.%s.<img_7>`) и перейти в раздел меню "Configuration". При этом открывается окно конфигурации выбранного экземпляра (:numref:`Рис.%s.<img_8>`).

.. _img_8:

.. figure:: ../../imgs/cluster_config.*
   :align: center

   Окно конфигурации кластера


В блоке "ADCM" есть возможность настройки адресов:

* *Host* (можно указать fqdn и IP-адрес);
* *Port*.

В блоке настроек "Repositoryes" указываются требуемые для установки *ads* пакеты из различных yum-репозиториев, при этом в каждом из параметров можно изменить заданный по умолчанию url на необходимый:

* ads;
* monitoring;
* epel.

Каждый компонент сервиса кластера имеет возможность отсылать статусную информацию о своем состоянии (keep alive) процессу **ADCM** в докер-контейнере. В ряде случаев **ADCM** может оказаться за NAT, и в таком случае исключается очевидный вариант автоматического определения его адреса, видимого со стороны сервисной компоненты на хосте кластера. Поэтому данный адрес указывается вручную. Во время установки **ADS** адрес **ADCM** используется для заполнения конфигурации компонентов, отвечающих за передачу статусной информации.



Добавление сервисов
-------------------

Кластер **ADS** содержит следующие сервисы:

* *Zookeeper* -- сервис, предназначенный для хранения конфигураций, выполнения распределённой синхронизации процессов;
* *Kafka* -- распределенная пплатформа для потоковых операций и данных;
* *Nifi* -- распрделенная платформа, предназначенная для построения и автоматизации потоков данных между различными системами.
* *Monitoring Clients* -- агенты, отсылающие информацию о хосте и ADS в мониторинг.

Не все сервисы являются обязательными для установки. Например, если вы не планируете использовать **Nifi**, то нет необходимости добавлять этот сервис. Или в случае, когда применяется сервис мониторинга (не на базе **Graphite**), незачем ставить агенты из *Monitoring Clients*. Однако, если планируется использование **Kafka**, одноименный сервис и **Zookeeper** обязательны, тоже самое можно сказать и про сервис **Nifi**. В тоже время сервис может состоять из обязательных и необязательных компонентов. Например, сервис *Kafka* состоит из обязательного компонента *broker* и необязательных: *manager* и *schema-registry*.

В настоящем примере в кластер добавлены все сервисы:

+ `Настройка сервиса Zookeeper`_;
+ `Настройка сервиса Kafka`_;
+ `Настройка сервиса Nifi`_;
+ `Настройка сервиса Monitoring Clients`_.


.. important:: На текущий момент невозможно удалить из кластера уже добавленный сервис


Настройка сервиса Zookeeper
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Для перехода к настройкам сервиса *Zookeeper* необходимо нажать кнопку с пиктограммой шестеренки в соответствующей строке вкладки "SERVICES" и перейти в раздел меню "Configuration". При этом открывается окно конфигурации сервиса *Zookeeper* (:numref:`Рис.%s.<img_13>`).

.. _img_13:

.. figure:: ../../imgs/zk_config.*
   :align: center

   Окно конфигурации сервиса Zookeeper


В блоке настроек "Main" задаются основные параметры:

* *connect* -- строка подключения к Znode, в которой Zookeeper хранит конфигурацию текущего кластера, используется сервисом **Kafka**. В текущей реализации данный параметр недоступен для редактирования и генеруруется на стороне ADCM автоматически;

* *data_dirs* -- каталог для хранения транзакционных логов Zookeeper. Данный параметр указывается как *dataDir* в конфигурационном файле *zoo.cfg*; 

* *client_port* -- порт, на котором Zookeeper слушает клиентские подключения.

В блоке настроек "Advanced" задаются следующие расширенные параметры:

* *zoo_cfg_content* -- содержимое файла *zoo.cfg*, которое в дальнейшем шаблонизируется. Данный параметр может использоваться для внесения `дополнительных настроек <https://zookeeper.apache.org/doc/r3.4.12/zookeeperAdmin.html#sc_configuration>`_;

* *zookeeper_env_content* -- содержимое файла *zookeeper-env.sh*, которое в дальнейшем шаблонизируется. Данный параметр может использоваться для внесения переменных окружения; 


Настройка сервиса Kafka
^^^^^^^^^^^^^^^^^^^^^^^^^

Для перехода к настройкам сервиса *kafka* необходимо нажать кнопку с пиктограммой шестеренки в соответствующей строке вкладки "SERVICES" и перейти в раздел меню "Configuration". При этом открывается окно конфигурации сервиса *Kafka* (:numref:`Рис.%s.<img_14>`).

.. _img_14:

.. figure:: ../../imgs/kafka_config.*
   :align: center

   Окно конфигурации сервиса Kafka


В блоке настроек "Main" задаются основные параметры:

* *data_dirs* -- каталог для хранения данных в *Kafka*. Указывается к качестве параметра *log.dirs* в конфигурационном файле `server.properties  <../../../Config/index>`;

* *listeners* -- список URI (протокол, хост и порт, на котором поднят брокер), разделенный запятыми. Если используется не *PLAINTEXT*  протокол, то необходимо также указать listener.security.protocol.map. Укажите имя хоста как 0.0.0.0 для привязки ко всем интерфейсам. Оставьте имя хоста пустым для привязки к интерфейсу по умолчанию. Указывается к качестве параметра *listeners* в конфигурационном файле `server.properties  <../../../Config/index>`; 

* *default_replication_factor* -- фактор репликации, с которым по умолчанию создаются и хранятся топики. Указывается в качестве параметра *default.replication.factor* в конфигурационном файле `server.properties  <../../../Config/index>`;

* *delete_topic_enable* -- данный параметр позваляет удалять топики. Если данный параметр выключен, то невозможно удалить то  с которым по умолчанию создаются и хранятся топики. Указывается к качестве параметра *default.replication.factor* в конфигурационном файле `server.properties  <../../../Config/index>`;

* *log_retention_hours* -- количество часов, в течение которых топики храняться в *Kafka*. Указывается в качестве параметра *log.retention.hours* в конфигурационном файле `server.properties  <../../../Config/index>`;

* *log_roll_hours* -- максимальное время, после которого пояляется новый журнал сегмента, даже если старый журнал не переполненю Указывается к качестве параметра *log.roll.hours* в конфигурационном файле `server.properties  <../../../Config/index>`;

* *broker_jmx_port* -- порт, по которому *Kafka* брокер отдает *jmx* метрики. Указывается в качестве параметра *JMX_PORT* в файле *kafka-env.sh*;

* *manager_port* -- порт, на котором поднимается *Kafka-Manager*. Указывается в файле *kafka-manager-env.sh*;

* *schema_registry_heap_opts* -- размер кучи, выделяемoй процессу *schema-registry*. Указывается в качестве параметра *SCHEMA_REGISTRY_HEAP_OPTS* в *schema-registry-env.sh*;

* *schema_registry_listener_port* -- порт, который слушает *schema-registry*. Указывается в качестве параметра *listeners* в конфигурационном файле *schema-registry.properties*;

В блоке настроек "Advanced" задаются следующие расширенные параметры:

* *server_properties_content* -- содержимое файла *server.properties*, которое в дальнейшем шаблонизируется. Данный параметр может использоваться для внесения `дополнительных настроек <../../../Config/index>`_;

* *kafka_env_content* -- содержимое файла *kafka-env.sh*, которое в дальнейшем шаблонизируется. Данный параметр может использоваться для внесения переменных окружения.


Настройка сервиса Nifi
^^^^^^^^^^^^^^^^^^^^^^^^

Для перехода к настройкам сервиса *Nifi* необходимо нажать кнопку с пиктограммой шестеренки в соответствующей строке вкладки "SERVICES" и перейти в раздел меню "Configuration". При этом открывается окно конфигурации сервиса *Nifi* (:numref:`Рис.%s.<img_14>`).

.. _img_14:

.. figure:: ../../imgs/nifi_config.*
   :align: center

   Окно конфигурации сервиса Nifi


В блоке настроек "Main" задаются основные параметры:

* *nifi_ui_port* -- *http* порт, на котором поднимается веб-интерфейс сервиса *Nifi*. Указывается в качестве параметра *nifi.web.http.port* в конфигурационном файле *nifi.properties*;

* *nifi_node_jvm_memory* -- размер кучи, выделяемой процессу сервиса *Nifi*. Указывается в конфигурационном файле *bootstrap.conf*; 

В блоке настроек "Custom" задаются следующие необязательные параметры:

* *nifi_custom_nars* -- данный параметр следует ичпользовать, если вы ходитет добавить *custom nars*. Следует перечислить через запятую. Указываются в качестве *nifi.nar.library.directory.lib...*  в конфигурационном файле *nifi.properties*;

В блоке настроек "Advanced" задаются следующие расширенные параметры:

* *nifi_properties_content* -- содержимое файла *nifi.properties*, которое в дальнейшем шаблонизируется. Данный параметр может использоваться для внесения дополнительных настроек;

* *nifi_env_content* -- содержимое файла *nifi-env.sh*, которое в дальнейшем шаблонизируется. Данный параметр может использоваться для внесения переменных окружения.

* *bootstrap_content* -- содержимое файла *bootstrap.conf*, которое в дальнейшем шаблонизируется. Данное поле может использоваться для внесения настроек, связанных с запуском сервиса.

* *logback_content* -- содержимое файла *logback.xml*, которое в дальнейшем шаблонизируется. Данное поле может использоваться для внесения настроек, связанных с логированием.

* *state_management_content* -- содержимое файла *state_management.xml*, которое в дальнейшем шаблонизируется. Данное поле может использоваться для внесения настроек, связанных с хранением состояния сервиса *Nifi* .

* *authorizers_content* -- содержимое файла *authorizers.xml*, которое в дальнейшем шаблонизируется. Данное поле может использоваться для внесения настроек авторизации в сервис *Nifi* в том случае, если настроены политики безопасности.

* *login_identity_providers_content* -- содержимое файла *login_identity_providers.xml*, которое в дальнейшем шаблонизируется. Данное поле может использоваться для внесения настроек авторизации, используемые *state* провайдером, в том случае, если настроены политики безопасности.


Настройка сервиса monitoring clients
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

В блоке настроек "Advanced" задаются следующие расширенные параметры:

* *kafka_dashboard* -- файл в формате *json*, который в дальнейшем шаблонизируется и отправляется в *Grafana*;

* *kafka_metrics* -- файл в формате *yaml*, которое в дальнейшем шаблонизируется. Включает в себя *jmx* метрики брокеров *Kafka*(:numref:`Рис.%s.<img_15>`).

.. _img_15:

.. figure:: ../../imgs/nifi_config.*
   :align: center

   Окно конфигурации сервиса Monitoring Clients


Добавление хостов
-----------------

По результатам `предварительных действий <>`_ в **ADCM** . На данном этапе их следует добавить в кластер *adb*:

1. В меню кластера *ads* открыть вкладку "Hosts" (:numref:`Рис.%s.<img_16>`).

.. _img_16:

.. figure:: ../../../imgs/hosts_list.png
   :align: center

   Вкладка "Hosts" кластера ads

2. Нажать "Add hosts" и в открывшейся форме выбрать необходимые хосты (:numref:`Рис.%s.<img_17>`).

.. _img_17:

.. figure:: ../../../imgs/add_hosts.*
   :align: center

   Выбор хостов


3. В результате выполненных действий факт добавления хостов отображается в кластере *ads* в списке вкладки "Hosts" (:numref:`Рис.%s.<img_18>`).


.. _img_18:

.. figure:: ../../../imgs/hosts_list2.png
   :align: center

   Результат успешного добавления хостов



Размещение компонентов сервисов на хостах
-----------------------------------------

Каждый сервис состоит из обязательных компонентов, которые должны быть размещены, и необязательных, которые могут быть не разщены на хостах кластера. Для этого необходимо на вкладке кластера "Hosts - Components" выбрать компонент посредством нажатия на него мышкой в колонке "Components" и определить для него необходимый хост в колонке "Hosts" (:numref:`Рис.%s.<img_19>`).


.. _img_19:

.. figure:: ../../../imgs/components.*
   :align: center

   Размещение компонентов сервисов на хостах


Поскольку сервисы *Zookeeper*, *Kafka*, *Nifi* и *Monitoring Clients* добавлены в кластер **ADS**, но еще не размещены на хостах, то изначально ни на одном из хостов нет компонентов:

1. Компоненты сервиса *Zookeeper* (:numref:`Рис.%s.<img_20>`):

* *Zookeeper.SERVER* -- необходимо добавить на 1 или нечетное количество хостов (для больших кластеров рекмоендуем не более 5) (*zk1*).

.. _img_20:

.. figure:: ../../../imgs/zk_components.*
   :align: center

   Компоненты сервиса *Zookeeper*


2. Компоненты сервиса *Kafka* (:numref:`Рис.%s.<img_21>`):

* *kafka.BROKER* -- необходимо добавить на один и более хостов брокеров (*kafka1*, *kafka2*);

* *kafka.MANAGER* -- опционально может быть добавлен на один любой хост (*kafka1*);

* *kafka.SCHEMA_REGISTRY* -- опционально может быть добавлен на один любой хост (*kafka2*).

.. _img_21:

.. figure:: ../../../imgs/kafka_components.*
   :align: center

   Компоненты сервиса *Kafka*


3. Компоненты сервиса *Nifi* (:numref:`Рис.%s.<img_22>`):

* *nifi.SERVER* -- необходимо добавить на один и более хостов (*df-mdw*);

.. _img_22:

.. figure:: ../../../imgs/nifi_components.*
   :align: center

   Компоненты сервиса *Nifi*


4. Компоненты сервиса *monitoring clients* (:numref:`Рис.%s.<img_23>`):

* *monitoring_clients.diamond* -- должен быть добавлен на все хосты (*zk1*, *kafka1*, *kafka2*, *nifi2*). Собирает системные метрики и отправляет их **ADCM**;

* *monitoring_clients.jmxtrans* -- необходимо добавить на один хост (*zk1*). Собирает специфичные для cервисов метрики и отправляет их **ADCM**;

.. _img_23:

.. figure:: ../../../imgs/mc_components.*
   :align: center

   Компоненты сервиса Monitoring Clients


Установка сервисов
------------------

Существует два способа установки сервисов:

* Установка кластера. Операция на уровне кластера, представляет собой последовательный вызов процессов установки и конфигурирования всех добавленных сервисов.

* Установка сервиса. Операция на уровне сервиса, представляет собой установку отдельно взятого сервиса.

Независимо от выбранного типа установки, прежде чем запустить ее, необходимо импортировать настройки из кластера *Monitoring*, если добавлен сервис *Monitoring Clients*

Установка кластера
------------------

Для установки кластера *ads* на вкладке кластера "Services" необходимо выполнить:


Установка сервиса Zookeeper
---------------------------

Для установки сервиса *Zookeeper* на вкладке кластера "Services" необходимо выполнить:

1. Install -- производится настройка хостов, установка необходимых пакетов:

* В поле "Actions" нажать на пиктограмму в строке сервиса *Zookeeper* и выбрать действие *Install* (:numref:`Рис.%s.<img_24>`).

.. _img_24:

.. figure:: ../../../imgs/zk_install.*
   :align: center

   Install



* По результатам инсталляции сервис *Zookeeper* меняет состояние с *created* -- создан, на *installed* -- установлен (:numref:`Рис.%s.<img_25>`).

.. _img_25:

.. figure:: ../../../imgs/adcm.*
   :align: center

   Статус сервиса

   Запрос на подтверждение действия


Установка сервиса Kafka
-----------------------

Для установки сервиса *Kafka* на вкладке кластера "Services" необходимо выполнить:

* В строке сервиса *Kafka* в поле "Actions" нажать на пиктограмму и выбрать действие *Install* (:numref:`Рис.%s.<img_31>`).

.. _img_31:

.. figure:: ../../../imgs/kafka_install.*
   :align: center

   Install Kafka



* По результатам инсталляции сервис *Kafka* меняет состояние с *created* -- создан, на *installed* -- установлен (:numref:`Рис.%s.<img_33>`).

.. _img_33:

.. figure:: ../../../imgs/adcm.*
   :align: center

   Статус сервиса



Установка сервиса Monitoring Clients
------------------------------------

Сервис *Monitoring Clients* требует импорта конфигурационных параметров кластера мониторинга (адреса, логин/пароль) в кластер *ads*:

1. Для импорта конфигурации мониторинга в кластер *ads* необходимо открыть в ADCM вкладку "CLUSTERS", выбрать опцию *Import* и отметить импортируемые настройки сервисов с помощью простановки флажков в открывшейся форме (:numref:`Рис.%s.<img_35>`).

.. _img_35:

.. figure:: ../../../imgs/import_configs.*
   :align: center

   Импорт конфигурации мониторинга


2. Установка клиентов мониторинга в кластер *ads*:

* В кластере *ads* на вкладке "Services" в поле "Actions" нажать на пиктограмму и выбрать действие *Install* для службы *monitoring clients* (:numref:`Рис.%s.<img_36>`).

.. _img_36:

.. figure:: ../../../imgs/mc_install.*
   :align: center

   Установка клиентов мониторинга



* По результатам инсталляции служба *monitoring clients* меняет состояние с *created* -- создана, на *installed* -- мониторится (:numref:`Рис.%s.<img_38>`).

.. _img_38:

.. figure:: ../../../imgs/adcm.*
   :align: center

   Статус службы

