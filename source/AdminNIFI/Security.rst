Настройка безопасности
=======================

В целях безопасности серсис **NiFi** предоставляет несколько различных параметров конфигурации. Наиболее важными являются свойства под заголовком *"security properties"* в файле *nifi.properties*. 

Для безопасной работы должны быть установлены свойства, приведенные в таблице.

.. csv-table:: Описание свойств безопасности NiFi
   :header: "Свойство", "Описание"
   :widths: 50, 50

   "nifi.security.keystore", "Имя файла Keystore, содержащего закрытый ключ сервера"
   "nifi.security.keystoreType", "Тип Keystore. Должен быть либо PKCS12, либо JKS. JKS является предпочтительным типом, файлы PKCS12 загружаются библиотекой BouncyCastle"
   "nifi.security.keystorePasswd", "Пароль Keystore"
   "nifi.security.keyPasswd", "Пароль для сертификата в Keystore. Если значение не установлено, используется nifi.security.keystorePasswd"
   "nifi.security.truststore", "Имя файла Truststore для авторизации тех, кто подключается к NiFi. Защищенный инстанс без Truststore отклоняет все входящие подключения"
   "nifi.security.truststoreType", "Тип Truststore. Должен быть либо PKCS12, либо JKS. JKS является предпочтительным типом, файлы PKCS12 загружаются библиотекой BouncyCastle"
   "nifi.security.truststorePasswd", "Пароль Truststore"
   "nifi.security.needClientAuth", "Значение true требует пройти аутентификацию при подключении клиентов. Свойство используется протоколом кластера NiFi для подтверждения, что узлы в кластере аутентифицированы и имеют сертификаты, которым доверяют Truststores"

После настройки перечисленных свойств можно разрешить доступ к пользовательскому интерфейсу через HTTPS вместо HTTP. Это достигается путем установки свойств *nifi.web.https.host* и *nifi.web.https.port*. Свойство *nifi.web.https.host* указывает, на каком хосте должен работать сервер. При необходимости доступности интерфейса HTTPS со всех сетевых интерфейсов следует использовать значение *0.0.0.0*. Для того, чтобы администраторы могли настраивать приложение для работы только на определенных сетевых интерфейсах, следует указать свойства *nifi.web.http.network.interface* и *nifi.web.https.network.interface*.

.. important:: При включении HTTPS исключить свойство *nifi.web.http.port*, так как NiFi поддерживает либо HTTP, либо HTTPS

Так же и с *nifi.security.needClientAuth* -- веб-сервер может быть настроен на требование аутентификации на основе сертификатов у пользователей, обращающихся к интерфейсу. Для этого веб-сервер не должен поддерживать аутентификацию имени пользователя и пароля с помощью протокола LDAP или Kerberos, так как любой из этих параметров настраивает проверку подлинности клиента на основе сертификатов, а у кого их нет, могут войти в систему под своими учетными данными или получить анонимный доступ. Но если аутентификация по имени пользователя и паролю и анонимный доступ не настроены, то веб-сервер запрашивает аутентификацию клиента на основе сертификата (см. `Аутентификация пользователя`_).

После защиты пользовательского интерфейса следует обеспечить связь между сайтами и внутренние кластерные коммуникации. Это достигается установкой свойств *nifi.remote.input.secure* и *nifi.cluster.protocol.is.secure* в значение *true*.


Набор средств генерации TLS
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Для упрощения установки **NiFi** и автоматического создания необходимых хранилищ ключей, доверительного хранилища и соответствующих файлов конфигурации можно использовать утилиту командной строки *tls-toolkit*, что так же обеспечит безопасность многочисленных узлов **NiFi**.

Wildcard-сертификаты (т. е. два узла *node1.nifi.apache.org* и *node2.nifi.apache.org*, которым назначается тот же сертификат с записью CN или SAN *.nifi.apache.org*) официально не поддерживаются и не рекомендуются. Их использование имеет множество недостатков и приемлемо только, если каждый сертификат поддерживает дополнительную уникальную запись SAN и запись CN.

Потенциальные проблемы использования wildcard-сертификатов:

+ Кластерные связи многократно используют идентификаторы сертификатов для определения узла, а если сертификат представляет собой подстановочное DN, то он не даст ответа;

+ Администраторам может потребоваться предоставить кастомный идентификатор узла в *authorizers.xml* для *.nifi.apache.org*, поэтому все действия прокси-сервера разрешаются только в сертификате DN (см. `Аутентификация пользователя`_);

+ Администраторы не имеют возможности отслеживать, в каком узле выполняется действие, так как все они направляются в один и тот же DN;

+ 










